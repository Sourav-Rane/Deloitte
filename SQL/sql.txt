
CREATE TABLE CUSTOMER
(
CUSTOMERID INTEGER,
CUSTOMERNAME VARCHAR2(20),
CUSTOMERADDR VARCHAR2(20),
BILLAMOUNT INTEGER
)


insert into customer values(101,'jay','pune',34324);
insert into customer values(102,'yash','Blr',34324);
insert into customer values(103,'tarun','Blr',34324);
insert into customer values(104,'kalpana','Mumb',34324);
insert into customer values(105,'shek','pune',34324);


select distinct(customeraddr) from customer;
select  customername , billamount , billamount*10 as newbill from customer;
select 'Mr/Ms' || customername from customer;

select * from customer where billamount < 5000;
select * from customer where customeraddr ="pune" and billamount <5000;

select * from customer where customeraddr = 'pune' or customeraddr = 'Mumb';
select * from customer where customeraddr in ('pune' , 'Blr');



insert into customer values(106,'jay',null,3000);
insert into customer (customerid) values(107);


CREATE TABLE employee
(
employeeid integer not null,
employeename varchar2(20) not null,
employeeaddr varchar2(20),
salary integer not null
)


select * from customer where customername like 'j%'
select * from customer order by customername desc



create table Student_f
 (
    Roll varchar(10),
    Name varchar(20),
    Address varchar(20),
    Marks integer
)
 
insert into Student_F values('1','Tufail','Chennai',null);
insert into Student_F values('2','Amit','Chennai',null);



select upper('abc') from dual; // dual table is a dummy table


Functions:
1. number
2. date
3. conversion
4. general functions
5. character 
-------------------------------------------------------------------------------------


Character

select initcap(name) from student_f; 
select initcap('sandeep') from dual;

concat('hello','world')
substr('helloworld',1,5)
length('hello')
instr('helloworld','w')
LPAD(salary , 4 ,'*')
RPAD(salary , 4 ,'*')
TRIM('H' from 'Helloworld')


-------------------------------------------------------------------------------------



months_between(date1 , date2  );
add_months(date , number of months);

-------------------------------------------------------------------------------------


select eid, ename , trunc((sysdate-dob)/365) as age , trunc((sysdate-doj)/365) as cmp_time from employee1

select to_char(sysdate , 'dd/mm/yyyy') from dual

select to_char(marks) || 5 from student_F;


insert into employee1 values (5,'aditi',to_date('2003/05/03 21:02:44' , 'yyyy/mm/dd hh24:mi:ss'), to_date('2015/05/03 21:02:44' , 'yyyy/mm/dd hh24:mi:ss'))

select name , nvl(marks , 0 ) from student_f;  // replaces all null values 
select nvl2(marks,roll*3 , roll*5) from student_f // if marks is not null then returns exp1 if null then returns 2nd expr
select nullif(customerid , billamount) from customer; // if both equal then null else returns first expr

select roll , coalesce(to_number(roll) , marks , 10) from student_F; 




create table customer100 
(
   cid integer primary key,
cname varchar(20) not null,
caddr varchar(20) check(caddr in('delhi','mumbai','kolkata')),
billAmount integer check(billamount > 20)
)

insert into customer100 values(100,'sandeep','mumbai',100)


-------------------------------------------------------------------------------------


create table customer200 
(
   cid integer constraint pkcid primary key,
cname varchar(20) constraint cnamenotnull not null,
caddr varchar(20) constraint checkaddress check(caddr in('delhi','mumbai','kolkata')),
billAmount integer constraint checkbillamt check(billamount > 20)
)

create table customer300 
(
cid integer,
cname varchar(20) constraint cnamenotnull1 not null,
caddrr varchar(20) constraint checkaddrrn1 check(caddrr in ('delhi' , 'mumbai')),
billamount integer constraint checkbill1 check (billamount > 0),
email varchar(20),
constraint pkcust primary key(cid , email)
)

UPDATE
update customer set customeraddr = 'bangalore' , billamount  = 5000 where customerid = '101'

DELETE
delete from customer where customername = 'jay';

TRUNCATE
truncate table customer;

DROP
drop table customer;


-------------------------------------------------------------------------------------


FK

create table emp 
(
emp_no integer primary key,
empname varchar(20) not null,
salary integer,
designation varchar(20),
dept_no integer
)

create table dept
(
dept_no integer primary key,
dept_name varchar(20),
location varchar(20) not null
)


alter table emp add constraint fkempdept foreign key(dept_no) references dept(dept_no);

insert into dept values(100,'HR','mumbai')
insert into emp values(12,'yati',8878,'developer',100)

-------------------------------------------------------------------------------------

CASCADE

create table section
(
section_id integer constraint s_id check (section_id > 0),
section_name char(30) constraint s_name not null,
book_count integer,
constraint sect_prime primary key(section_id)
)



CREATE TABLE BOOK
(
ISBN INTEGER CONSTRAINT B_ISBN CHECK (ISBN BETWEEN 1 AND 2000),
TITLE VARCHAR2(200) CONSTRAINT B_TITLE NOT NULL,
AUTHOR VARCHAR2(50) CONSTRAINT B_AUTH NOT NULL,
LENT_DATE DATE,
RETURNED_DATE DATE,
TIMES_LENT NUMBER(6),
SECTION_ID NUMBER(3),
CONSTRAINT BOOK_PRIME PRIMARY KEY (ISBN),
CONSTRAINT BOOK_SECT FOREIGN KEY (SECTION_ID) REFERENCES SECTION(SECTION_ID)
ON DELETE CASCADE)




INSERT INTO SECTION values(1,'ABC',78);

INSERT INTO SECTION values(2,'XYZ',65);
insert into BOOK values(1,'java','james',to_date('3/3/09','mm/dd/yy'),to_date('3/4/09','mm/dd/yy'),10,1);

select * from section
select * from book

delete from section where section_id = 1


----------------------------------------------------------------------------
Disabling constraints

ALTER TABLE table_name
DISABLE CONSTRAINT constraint_name;


--------------------------------------------------------------------------------
JOINS


EQUI-join , INNER , SIMPLE

select supplier_name , order_date
from suppliers , orders
where suppliers.supplier_id = orders.supplier_id


select s.supplier_id ,s.supplier_name , o.order_date
from suppliers s , orders o
where s.supplier_id = o.supplier_id


--------------------------------------------------------------------------------

OUTER join

L-outer Join

select s.supplier_id ,s.supplier_name , o.order_date
from suppliers s , orders o
where s.supplier_id = o.supplier_id(+)	

R-outer join

select s.supplier_id ,s.supplier_name , o.order_date
from suppliers s , orders o
where s.supplier_id(+) = o.supplier_id

Full - outer join

select s.supplier_id ,s.supplier_name , o.order_date
from suppliers s full outer join orders o 
on s.supplier_id = o.supplier_id



---------------------------------------------------------------------------------------

SELF join

select e1.last_name || 'works for' || e2.last_name
"Employees and their Managers"
from employees e1, employees e2 
where e1.manager_id = e2.employee_id;

---------------------------------------------------------------------------------------


GROUP BY
select manager_id , sum(salary) from employees group by manager_id;


----------------------------------------------------------------------------------

SUB QUERY
select name from stu where roll in (select roll from fees where amount = 10800)


----------------------------------------------------------------------------------------
EXISTS

select name from stu where not exists (select roll from fees where amount = 100)
select name from stu where exists (select roll from fees)

------------------------------------------------------------------------------------------

ANY

select roll, name from stu where roll > any( select roll from fees)
select roll, name from stu where roll > all( select roll from fees)

---------------------------------------------------------------------------------------------
COORELATED sub UPDATE

create table emp100
(
	empId integer,
	empName varchar(20),
	sal integer,
	deptno integer
)


insert into emp100 values(1,'Tufail',980000,1);
insert into emp100 values(2,'Ahmed',80000,1);
insert into emp100 values(3,'Khan',90000,2);
insert into emp100 values(4,'Tarun',20000,2);
insert into emp100 values(5,'Neha',950000,2);


update emp100 a
set a.sal = ( select avg(sal) from emp100 b group by deptno having a.deptno = b.deptno)
where a.sal < (select  avg(sal) from emp100  c group by deptno having c.deptno = a.deptno)


------------------------------------------------------------------------------------------



